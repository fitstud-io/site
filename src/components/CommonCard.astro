---
import type { CollectionEntry } from "astro:content";
import OptimizedCover from "@components/OptimizedPicture.astro";
import FormattedDate from "@components/FormattedDate.astro";

interface Props {
  post: CollectionEntry<"posts">;
}

const { post } = Astro.props;

function truncateUTF8String(str: string, maxBytes: number) {
  let byteCount = 0;
  let index = 0;
  while (index < str.length && byteCount < maxBytes) {
    const char = str.charCodeAt(index);
    if (char > 0x7ff) {
      byteCount += 3;
    } else if (char > 0x7f) {
      byteCount += 2;
    } else {
      byteCount += 1;
    }
    if (byteCount <= maxBytes) index++;
    else break;
  }
  return str.slice(0, index) + (index < str.length ? "..." : "");
}

const truncatedDescription = truncateUTF8String(post.data.description, 150);
---

<article class="border-t border-gray-300/30 dark:border-gray-900/50 py-8 sm:flex lg:flex-col lg:border-t-0 xl:flex-row xl:items-center xl:border-t">
  <a href={`/posts/${post.slug}/`} class="rounded-lg block hover:text-red-400 overflow-hidden group order-2 w-full sm:w-2/5 lg:order-1 lg:w-full xl:w-2/5">
    <OptimizedCover src={post.data.cover} alt={post.data.title} loading="lazy" />
  </a>
  <div class="order-1 mt-5 w-full px-2 sm:mt-0 sm:max-w-sm sm:pl-0 sm:pr-5 lg:order-2 lg:mt-4 xl:ml-5 xl:mt-0 xl:flex-1">
    <div class="flex items-center gap-4 text-xs">
      <div class="flex-none">
        {post.data.tags.join(", ")}
      </div>
      <div class="flex-grow text-right">
        <FormattedDate date={post.data.pubDate} />
      </div>
    </div>
    <h3 class="mt-2 text-lg font-medium">
      <a href={`/posts/${post.slug}/`} class="block hover:text-primary transition duration-300">
        {post.data.title}
      </a>
    </h3>

    <p class="mt-3">
      {truncatedDescription}
    </p>
  </div>
</article>
